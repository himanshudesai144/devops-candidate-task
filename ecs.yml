AWSTrainingECSCluster:

    Type: AWS::ECS::Cluster

    Properties:

      ClusterName: AWSTrainingECSCluster



AWSTrainingECSService:

    Type: AWS::ECS::Service

    DependsOn: WebListenerRule

    Properties:

      Cluster: !Ref AWSTrainingECSCluster

      DesiredCount: 1

      LaunchType: EC2

      LoadBalancers:

        - ContainerName: AWSTraining

          ContainerPort: 8080

          TargetGroupArn: !Ref WebTargetGroup

      NetworkConfiguration:

        AwsvpcConfiguration:

          AssignPublicIp: DISABLED

          Subnets:

          - Fn::ImportValue: !Sub ${EnvironmentName}:SubnetAZ1Private

          - Fn::ImportValue: !Sub ${EnvironmentName}:SubnetAZ2Private

          SecurityGroups:

            - !Ref ContainerSecurityGroup

      ServiceName: !Sub aws-training-${EnvironmentName}

      TaskDefinition: !Ref AWSTrainingTaskDefinition

      DeploymentConfiguration:

        MaximumPercent: 200

        MinimumHealthyPercent: 50


CloudWatchLogsGroup:

    Type: AWS::Logs::LogGroup

    Properties:

      LogGroupName: /aws/ecs/training

      RetentionInDays: 7

AWSTrainingTaskDefinition:

    Type: AWS::ECS::TaskDefinition

    Properties:

      Cpu: "256"

      Memory: "512"

      ExecutionRoleArn: !Ref ECSTaskRole

      Family: aws-training

      NetworkMode: awsvpc

      RequiresCompatibilities:

        - EC2
        
      ContainerDefinitions:

        -

          Name: AWSTraining

          # Replace image link with the docker image path along with the tag

          Image: 428599696019.dkr.ecr.us-east-1.amazonaws.com/test:latest

          PortMappings:

            - ContainerPort: 3000

          LogConfiguration:

            LogDriver: awslogs

            Options:

              awslogs-group: !Ref CloudWatchLogsGroup

              awslogs-region: !Ref AWS::Region

              awslogs-stream-prefix: aws-training



ECSTaskRole:

    Type: AWS::IAM::Role

    Properties:

      AssumeRolePolicyDocument:

        Statement:

        - Effect: Allow

          Principal:

            Service: [ecs-tasks.amazonaws.com]

          Action: ['sts:AssumeRole']

      Path: /

      Policies:

        - PolicyName: AWSTrainingAmazonECSTaskExecutionRolePolicy

          PolicyDocument:

            Statement:

            - Effect: Allow

              Action:

                # ECS Tasks to download images from ECR

                - 'ecr:GetAuthorizationToken'

                - 'ecr:BatchCheckLayerAvailability'

                - 'ecr:GetDownloadUrlForLayer'

                - 'ecr:BatchGetImage'

                # ECS tasks to upload logs to CloudWatch

                - 'logs:CreateLogStream'

                - 'logs:PutLogEvents'

              Resource: '*'